/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package openstreetmaps;

import domain_simulation.Car;
import domain_simulation.Osmosis;
import domain_simulation.Simulation;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import openstreetmaps.org.openstreetmap.gui.CarGraphic;
import openstreetmaps.org.openstreetmap.gui.jmapviewer.JMapViewer;
import openstreetmaps.org.openstreetmap.gui.jmapviewer.OsmTileLoader;
import openstreetmaps.org.openstreetmap.gui.jmapviewer.events.JMVCommandEvent;
import openstreetmaps.org.openstreetmap.gui.jmapviewer.interfaces.JMapViewerEventListener;
import openstreetmaps.org.openstreetmap.gui.jmapviewer.tilesources.OsmTileSource;
import org.openstreetmap.osmosis.core.domain.v0_6.Node;

/**
 *
 * @author Eagle
 */
public class Frame extends javax.swing.JFrame implements JMapViewerEventListener
{

    private JMapViewer map;
    private double meterPerPixel;
    private double zoom;
    private Simulation sim;

    /**
     * Creates new form Frame
     */
    public Frame()
    {
        super("Autosysteem");

        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e)
        {
            e.printStackTrace();
        }

        initComponents();
        setLayout(new BorderLayout());

        // Add the map to the form and fill in settings
        addMap();

        // map.highlightCarGraphic("t1");

//        Coordinate one = new Coordinate(51.4560332, 5.5380103);
//        Coordinate two = new Coordinate(51.455726, 5.5326495);

//        List<Coordinate> route = new ArrayList<Coordinate>(Arrays.asList(one, two, two));
        //map.addMapPolygon(new MapPolygonImpl(route));

        // Fill the comboBox.
        currentCarComboBox.removeAllItems();

        for (CarGraphic c : map.getAllCarGraphics())
        {

            currentCarComboBox.addItem(c.getCarTrackerId());
        }


        //Simulation stuff happens here
        sim = new Simulation(jsInterval.getValue(), 500, this);
        for (Car c : sim.getGarage().getCars())
        {
            currentCarComboBox.addItem(c.getCarTrackerId());
        }
        
        // TEST
        // Adding cars to the map.
//        map.addCarGraphic(new CarGraphic(51.4560332, 5.5380103, "t0"));
//        map.addCarGraphic(new CarGraphic(51.455726, 5.5326495, "t1"));
//        map.addCarGraphic(new CarGraphic(52, 5.5326495, "t2"));

        Osmosis.init();
        final ArrayList<Node> nodes = Osmosis.plotPath(10);
        System.out.println(nodes.size());

        Thread t = new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                for (Node n : nodes)
                {
                    //map.addMapMarker(new MapMarkerDot(Color.yellow, n.getLatitude(), n.getLongitude()));
//                    try
//                    {
//                        System.out.println(nodes.indexOf(n));
//                        //Thread.sleep(1000);
//                    } catch (InterruptedException ex)
//                    {
//                        Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
//                    }
                }
            }
        });
        t.start();
        validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        mapPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        ownerLabel = new javax.swing.JLabel();
        numberOfCarsLabel = new javax.swing.JLabel();
        currentCarComboBox = new javax.swing.JComboBox();
        infoLabel2 = new javax.swing.JLabel();
        infoLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jsInterval = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        lbInterval = new javax.swing.JLabel();
        btStartSimulation = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btAddCar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(140, 218, 195));
        setResizable(false);

        mapPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        infoLabel.setText("Eigenaar: ");

        ownerLabel.setText("jLabel1");

        numberOfCarsLabel.setText("jLabel1");

        currentCarComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentCarComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                currentCarComboBoxActionPerformed(evt);
            }
        });

        infoLabel2.setText("Aantal auto's:");

        infoLabel3.setText("Huidige auto");

        jsInterval.setMaximum(10000);
        jsInterval.setMinimum(100);
        jsInterval.setValue(5000);
        jsInterval.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                jsIntervalStateChanged(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        lbInterval.setText("Timestep Interval");

        btStartSimulation.setText("Start Simulatie");
        btStartSimulation.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btStartSimulationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(infoLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentCarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(infoLabel)
                                    .addComponent(infoLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ownerLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(numberOfCarsLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbInterval)
                        .addGap(18, 18, 18)
                        .addComponent(jsInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btStartSimulation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoLabel)
                    .addComponent(ownerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfCarsLabel)
                    .addComponent(infoLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentCarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infoLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btStartSimulation)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jsInterval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbInterval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setText("Welkom.");

        jMenu1.setText("Simulatie");

        btAddCar.setText("Auto toevoegen...");
        btAddCar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btAddCarActionPerformed(evt);
            }
        });
        jMenu1.add(btAddCar);

        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /////TEMP
    public JMapViewer getMap()
    {
        return map;
    }

    public void setOutputText(String text)
    {
        this.jTextArea1.append(text);
    }
    /////TEMP

    private void currentCarComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_currentCarComboBoxActionPerformed
    {//GEN-HEADEREND:event_currentCarComboBoxActionPerformed
        if (currentCarComboBox != null && currentCarComboBox.getSelectedItem() != null)
        {
            for (Car car : sim.getGarage().getCars())
            {
                CarGraphic c = car.getCarGraphic();
                if (((String) currentCarComboBox.getSelectedItem()).equals(car.getCarTrackerId()))
                {
                    c.highlight(Color.BLUE);
                    map.repaint();
                    // map.highlightCarGraphic((String) currentCarComboBox.getSelectedItem());
                } else
                {
                    c.highlight(Color.RED);
                    map.repaint();
                }
            }
        }
    }//GEN-LAST:event_currentCarComboBoxActionPerformed

    private void btStartSimulationActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btStartSimulationActionPerformed
    {//GEN-HEADEREND:event_btStartSimulationActionPerformed
        if (sim != null)
        {
            if (!sim.isRunning())
            {
                sim.start();
                btStartSimulation.setText("Stop Simulatie");
            } else
            {
                sim.stop();
                btStartSimulation.setText("Start Simulatie");
            }
        }
    }//GEN-LAST:event_btStartSimulationActionPerformed

    private void jsIntervalStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_jsIntervalStateChanged
    {//GEN-HEADEREND:event_jsIntervalStateChanged
        sim.changeTimestepInterval(jsInterval.getValue());
        int seconds = jsInterval.getValue() / 1000;
        lbInterval.setText(String.valueOf(seconds));
    }//GEN-LAST:event_jsIntervalStateChanged

    private void btAddCarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btAddCarActionPerformed
    {//GEN-HEADEREND:event_btAddCarActionPerformed
        ArrayList<Node> route = Osmosis.plotPath(10);
        Car c = new Car(JOptionPane.showInputDialog("Vul een cartracker-id in."),route);
        
        sim.addCar(c,route);
        map.addCarGraphic(c.getCarGraphic());

        currentCarComboBox.removeAllItems();
        for (Car c2 : sim.getGarage().getCars())
        {
            currentCarComboBox.addItem(c2.getCarTrackerId());
        }
        validate();
    }//GEN-LAST:event_btAddCarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btAddCar;
    private javax.swing.JButton btStartSimulation;
    private javax.swing.JComboBox currentCarComboBox;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel infoLabel2;
    private javax.swing.JLabel infoLabel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JSlider jsInterval;
    private javax.swing.JLabel lbInterval;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JLabel numberOfCarsLabel;
    private javax.swing.JLabel ownerLabel;
    // End of variables declaration//GEN-END:variables

    private void updateZoomParameters()
    {
        meterPerPixel = map.getMeterPerPixel();
        zoom = map.getZoom();
    }

    @Override
    public void processCommand(JMVCommandEvent command)
    {
        if (command.getCommand().equals(JMVCommandEvent.COMMAND.ZOOM)
                || command.getCommand().equals(JMVCommandEvent.COMMAND.MOVE))
        {
            updateZoomParameters();
        }
    }

    public void addMap()
    {
        // Instantiate the map
        map = new JMapViewer();

        // Listen to the map viewer for user operations so components will
        // recieve events and update
        map.addJMVListener(this);

        // Set the tile source:
        // Other options are: 
        // OsmTileSource.CycleMap(), new BingAerialTileSource(), new MapQuestOsmTileSource(), new MapQuestOpenAerialTileSource()
        map.setTileSource(new OsmTileSource.Mapnik());

        // Set the tileloader
        map.setTileLoader(new OsmTileLoader(map));

        // Set the zoom controls to show on the map
        map.setZoomContolsVisible(true);

        // Set the layout for the map panel
        mapPanel.setLayout(new BorderLayout());

        // Add the JMapViewer component to the panel
        mapPanel.add(map, BorderLayout.CENTER);

        mapPanel.validate();
    }
}
